[{"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\index.js":"1","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\App.js":"3","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\faq.js":"4","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\mainPageYong.js":"5","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\HomePage\\index.js":"6","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\components\\FeedbackScreen.js":"7","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\components\\HeaderScreen.js":"8","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\components\\FAQScreen.js":"9","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\context\\index.js":"10","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\components\\MapComponent.js":"11","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\components\\SideBar.js":"12","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\components\\RightPanel.js":"13","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\HomePage\\component\\BigPicture.js":"14","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\layout\\Layout.js":"15","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\styles.js":"16","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\PageHeader.js":"17","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\icons.js":"18","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\Global.js":"19","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\ScreenWrapper.js":"20","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\CustomButton.js":"21","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\YellowSeparator.js":"22","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\Card.js":"23","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\layout\\Header.js":"24","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\layout\\Footer.js":"25","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\ExtraLargeHeader.js":"26","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\Card2.js":"27"},{"size":893,"mtime":1616314645000,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1616314645000,"results":"30","hashOfConfig":"29"},{"size":516,"mtime":1616314645000,"results":"31","hashOfConfig":"29"},{"size":498,"mtime":1616314645000,"results":"32","hashOfConfig":"29"},{"size":3367,"mtime":1617342221568,"results":"33","hashOfConfig":"29"},{"size":2054,"mtime":1616314645000,"results":"34","hashOfConfig":"29"},{"size":5809,"mtime":1616314645000,"results":"35","hashOfConfig":"29"},{"size":743,"mtime":1617331372544,"results":"36","hashOfConfig":"29"},{"size":3177,"mtime":1617330830030,"results":"37","hashOfConfig":"29"},{"size":87,"mtime":1616314645000,"results":"38","hashOfConfig":"29"},{"size":3328,"mtime":1617267527747,"results":"39","hashOfConfig":"29"},{"size":1165,"mtime":1617283224026,"results":"40","hashOfConfig":"29"},{"size":7856,"mtime":1617342195759,"results":"41","hashOfConfig":"29"},{"size":1577,"mtime":1617330220012,"results":"42","hashOfConfig":"29"},{"size":265,"mtime":1617333451261,"results":"43","hashOfConfig":"29"},{"size":795,"mtime":1616314645000,"results":"44","hashOfConfig":"29"},{"size":1220,"mtime":1616314645000,"results":"45","hashOfConfig":"29"},{"size":2833,"mtime":1616314645000,"results":"46","hashOfConfig":"29"},{"size":2681,"mtime":1616314645000,"results":"47","hashOfConfig":"29"},{"size":474,"mtime":1616314645000,"results":"48","hashOfConfig":"29"},{"size":866,"mtime":1616314645000,"results":"49","hashOfConfig":"29"},{"size":229,"mtime":1616314645000,"results":"50","hashOfConfig":"29"},{"size":2538,"mtime":1617340595822,"results":"51","hashOfConfig":"29"},{"size":4811,"mtime":1616314645000,"results":"52","hashOfConfig":"29"},{"size":1601,"mtime":1616314645000,"results":"53","hashOfConfig":"29"},{"size":1096,"mtime":1616314645000,"results":"54","hashOfConfig":"29"},{"size":2284,"mtime":1617340429247,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"6zqjhx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"58"},"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\index.js",[],["124","125"],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\App.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\faq.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\mainPageYong.js",["126","127","128","129","130","131","132","133"],"import React, { useState, useEffect } from 'react'\nimport Layout from '../../components/layout/Layout'\nimport MapComponent from './components/MapComponent'\nimport RightPanel from './components/RightPanel'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport { Context } from '../../context/index'\nimport SideBar from './components/SideBar'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n        [theme.breakpoints.down('sm')]: {\n            flexDirection: 'column'\n        },\n    },\n}));\n\nconst MainPageYoung = () => {\n    const [data, setData] = useState([])\n\n    const [routes, setRoutes] = useState([])\n    const [indexArray, setIndexArray] = useState(true)\n\n    const [state, setState] = useState(false)\n    const [sideData, setSideData] = useState([])\n\n    const [mapCenter, setMapCenter] = useState([67.792508, 129.868496])\n    const [mapZoom, setMapZoom] = useState(9)\n\n    const [video, setVideo] = useState(false)\n    const [selectedPlace, setSelectedPlace] = useState(0)\n    const [selectedRoute, setSelectedRoute] = useState(0)\n\n    const classes = useStyles()\n\n    // let mapCenter = [67.792508, 129.868496]\n\n    //useEffect(() => {\n    //    axios.get('http://localhost:3000/posts').then(res => setData(res.data))\n    //}, [])\n    //\n    //useEffect(() => {\n     //   axios.get('http://localhost:3000/route').then((res) => {\n    //        setRoutes(res.data)\n    //    })\n    //}, [])\n\n    const leverTrue = (id) => {\n        setState(true)\n\n        console.log('indexArray: ', indexArray)\n\n        setSideData(indexArray ? data.find((el) => {\n            return id == el.id\n        }) : routes.find((el) => {\n            return id == el.id\n        }))\n    }\n    const leverFalse = () => {\n        setState(false)\n    }\n\n    const updateMapCenter = (value) => {\n        // console.log('value: ', value)\n        setMapCenter(value.coords)\n        setSelectedPlace(value.id)\n        setMapZoom(10)\n    }\n\n    const _setVideo = (value) => {\n        setVideo(value)\n    }\n\n    console.log('THIS IS SIDE DATA')\n    console.log(sideData)\n    // setSideData({\n    //     title: 'Sd title',\n    //     image: undefined,\n    //     text: 'lorem impsum'\n    // })\n    \n    return (\n        <Context.Provider value={{ leverTrue, leverFalse }}>\n            <Layout>\n                <Grid container className={classes.container}>\n                    <Grid item xs={12} sm={12} lg={6} md={6} xl={6}>\n                        <MapComponent routes={routes} data={data} center={mapCenter} zoom={mapZoom} video={video} hideVideo={_setVideo} selectedPlace={selectedPlace} selectedRoute={selectedRoute} />\n                    </Grid>\n                    <Grid className={classes.CardBox} item xs={12} sm={12} lg={6} md={6} xl={6} style={{ backgroundColor: '#252525' }}>\n                        {/* {state ? <SideBar title={sideData.title} img={sideData.image} text={sideData.text} setVideo={_setVideo} /> : */}\n                            <RightPanel setIndexArray={setIndexArray} data={data} routesList={routes} state={state} setCoords={updateMapCenter} over={'scroll'} height={'800'} />\n                    </Grid>\n                </Grid>\n            </Layout>\n        </Context.Provider>\n    )\n}\n\nexport default MainPageYoung","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\HomePage\\index.js",["134","135"],"import React, { useEffect, useContext, useState } from 'react'\nimport Layout from '../../components/layout/Layout'\nimport BigPicture from './component/BigPicture'\nimport SidePanel from '../MainPageYoung/components/RightPanel'\nimport { Context } from '../../context/index'\nimport { Box, Grid, } from '@material-ui/core'\nimport axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom'\n\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#252525'\n    },\n    btn: {\n        background: '#24ca13',\n        borderRadius: 3,\n        border: 0,\n        height: 48,\n        padding: '0 30px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    }\n}));\n\nconst HomePage = () => {\n    const classes = useStyles()\n    const history = useHistory()\n    // const { user } = useContext(Context);\n    // useEffect(() => {\n    //     console.log('we user', user)\n    // }, [user])\n    const [data, setData] = useState([])\n    const [rout, setRout] = useState([])\n    const [indexArray, setIndexArray] = useState(true)\n    const leverTrue = () => {\n        console.log('')\n    }\n    const click = () => {\n        history.push('/maps')\n    }\n\n    useEffect(() => {\n        axios.get('http://localhost:3000/posts').then(res => setData(res.data))\n    }, [])\n    useEffect(() => {\n        axios.get('http://localhost:3000/route').then(res => setRout(res.data))\n    }, [])\n    return (\n        <Context.Provider value={{ leverTrue }}>\n            <Layout>\n                <BigPicture />\n                <Box className={classes.container}>\n                    <Grid item lg={6} sm={8} md={8} xl={6} xs={9}>\n                        <SidePanel data={data} over={'visible'} height={'100%'} click={click} routesList={rout} setIndexArray={setIndexArray} />\n                    </Grid>\n                </Box>\n            </Layout>\n        </Context.Provider>\n    )\n}\n\nexport default HomePage","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\components\\FeedbackScreen.js",["136"],"import * as React from 'react';\nimport { Box, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport { mainTheme } from \"../../../styles\";\nimport { useGlobalClasses } from \"../../../components/Global\";\n\nimport { ScreenWrapper } from \"../../../components/ScreenWrapper\";\nimport { PageHeader } from \"../../../components/PageHeader\";\nimport { Mail, Phone } from \"../../../icons\";\nimport { Button } from '../../../components/CustomButton'\nimport { useState } from \"react\";\n\n// TODO: Добавить логику отправки фидбэка\n\nconst useClasses = makeStyles({\n    cardsContainer: {\n        display: 'flex',\n        flexGrow: 1,\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        margin: \"auto\",\n        maxWidth: 700,\n        marginBottom: 40\n    },\n\n    cardBody: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        margin: '8px 0px',\n        minWidth: 300,\n    },\n\n    cardTitle: {\n        color: mainTheme.colors.darkBlue,\n        marginTop: 10,\n    },\n\n    cardDescription: {\n        color: mainTheme.colors.lightPurple,\n        fontSize: mainTheme.textSizes.extraSmall\n    },\n\n    textField: {\n        maxWidth: 340,\n        margin: '10px auto'\n    },\n    btn: {\n        backgroundColor: '#00FFC2',\n    }\n\n})\n\nexport const FeedbackScreen = ({ marginTop, marginBottom }) => {\n    const classes = useClasses()\n    const globalClasses = useGlobalClasses()\n    const [message, setMessage] = useState()\n    const [email, setEmail] = useState()\n    const [name, setName] = useState()\n\n    const postFeedback = async () => {\n        await axios.post('/api/front/feedback', {\n            name: name,\n            mail: email,\n            text: message\n        }).then((res) => {\n            if (res.status == 200) {\n                resetTextFields()\n                showMessage()\n            }\n        }).catch((err) => {\n            if (err) {\n                console.log('err', err)\n            }\n        })\n    }\n\n    const handleClick = () => {\n        postFeedback()\n    }\n\n    const resetTextFields = () => {\n        setMessage('')\n        setEmail('')\n        setName('')\n    }\n\n    const showMessage = () => {\n        alert('Сообщение успешно отправлено! Ожидайте ответ на указанный вами почовый адрес.')\n    }\n\n    return (\n        <ScreenWrapper marginTop={marginTop} marginBottom={marginBottom}>\n            <PageHeader name={'свяжитесь с нами'}\n                title={'Остались вопросы?'}\n                description={'ответим на дополнительные вопросы в специальной форме, там же можно написать отзыв об платформе и поделится рекомендациями по улучшению сервиса.'}\n            />\n            <Box className={classes.cardsContainer}>\n                <a href='mailto:#!'>\n                    <Box className={classes.cardBody}>\n                        <Mail />\n                        <Typography className={`${globalClasses.redTitle} ${classes.cardTitle}`}>Напишите\n                            нам</Typography>\n                        <Typography className={`${globalClasses.regularText} ${classes.cardDescription}`}>Мы ответим в\n                            течении ~24 часов</Typography>\n                    </Box>\n                </a>\n                <a href='tel:89627311800'>\n                    <Box className={classes.cardBody}>\n                        <Phone />\n                        <Typography className={`${globalClasses.redTitle} ${classes.cardTitle}`}>Позвоните</Typography>\n                        <Typography className={`${globalClasses.regularText} ${classes.cardDescription}`}>8-18 в течении\n                            дня</Typography>\n                    </Box>\n                </a>\n            </Box>\n            <Box display={'flex'} flexWrap='wrap' maxWidth={700} margin={'auto'}>\n                <TextField\n                    className={classes.textField}\n                    color='primary'\n                    fullWidth\n                    id=\"userName\"\n                    label=\"Ваше имя\"\n                    value={name}\n                    onChange={(textField) => {\n                        setName(textField.target.value)\n                    }}\n                />\n                <TextField\n                    className={classes.textField}\n                    color='primary'\n                    fullWidth\n                    id=\"eMail\"\n                    label=\"Ваша почта\"\n                    value={email}\n                    onChange={(textField) => {\n                        setEmail(textField.target.value)\n                    }}\n                />\n            </Box>\n            <Box display={'flex'} flexDirection={'column'} maxWidth={700} pt={5} margin={'auto'} paddingBottom={10}>\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Ваше сообщение\"\n                    multiline\n                    fullWidth\n                    rows={5}\n                    value={message}\n                    onChange={(textField) => {\n                        setMessage(textField.target.value)\n                    }}\n                    defaultValue=\"\"\n                    variant=\"outlined\"\n                    color='primary'\n                />\n                <Button text='Отправить сообщение' onClick={handleClick} />\n            </Box>\n        </ScreenWrapper>\n    );\n};","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\components\\HeaderScreen.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\Faq\\components\\FAQScreen.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\context\\index.js",["137"],"import React, { createContext, } from \"react\";\n\nexport const Context = createContext();","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\components\\MapComponent.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\components\\SideBar.js",["138","139","140"],"import React, { useContext } from 'react'\nimport { Box, TabScrollButton, IconButton, Grid } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { Context } from '../../../context/index';\n\n\nconst SideBar = ({ title, text, img, setVideo }) => {\n    const { leverFalse } = useContext(Context)\n\n    const showVideo = () => {\n        setVideo(true)\n    }\n    return (\n        <div>\n            <div style={{ marginLeft: 10 }}>\n                <IconButton>\n                    <ArrowBackIcon className=\"btn\" onClick={() => {\n                        leverFalse()\n                    }} />\n                </IconButton>\n            </div>\n\n            <div class=\"place-single\">\n                <Grid item lg={9} sm={12} md={9} xl={9} xs={12}>\n                    <img src={img} style={{ width: '100%' }} />\n                </Grid>\n                <p class=\"place-single__title\">{title}</p>\n                <p>{text}</p>\n\n                <p>\n                    <button className=\"btn\" onClick={showVideo}>Посмотреть видео</button>\n                </p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SideBar","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\MainPageYoung\\components\\RightPanel.js",["141","142","143","144","145"],"import React, { useEffect, useState } from 'react'\nimport Card from '../../../components/Card'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Box, TabScrollButton, IconButton, } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Paper from '@material-ui/core/Paper';\nimport SwipeableViews from 'react-swipeable-views';\nimport Image1 from '../../../Routes/Buora.png';\nimport Image2 from '../../../Routes/Deer.png';\nimport Image3 from '../../../Routes/Dombah.png';\nimport Image4 from '../../../Routes/Hobbol.png';\nimport Image5 from '../../../Routes/Sakha.png';\nimport Image6 from '../../../Routes/Ozero.png';\nimport Card2 from '../../../components/Card2';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: 800,\n        [theme.breakpoints.down('md')]: {\n            height: 600,\n        },\n        [theme.breakpoints.down('sm')]: {\n            overflowY: 'visible',\n        },\n        '&::-webkit-scrollbar': {\n            width: '0.4em'\n        },\n        '&::-webkit-scrollbar-track': {\n            '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)'\n        },\n        '&::-webkit-scrollbar-thumb': {\n            backgroundColor: 'rgba(0,0,0,.1)',\n            outline: '1px solid slategrey'\n        },\n    },\n    TextStyle: {\n        color: 'rgba(255, 255, 255, 0.6)',\n        marginLeft: 10,\n        fontSize: 16\n    },\n    Backround: {\n        backgroundColor: '#252525',\n        color: '#fff',\n        marginTop: 15\n    }\n}));\nconst RightPanel = ({ data, setCoords, over, height, routesList, setIndexArray, }) => {\n\n    const classes = useStyles()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const sendCoords = (value) => {\n        setCoords(value)\n    };\n    const handleChange = (event, newValue) => {\n        setValue(newValue)\n\n        if (value === 0) {\n            setIndexArray(true)\n        } else {\n            setIndexArray(false)\n        }\n        // console.log('asdasdads', value)\n    };\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    const updateCoords = (value) => {\n        // console.log('value: ', value)\n    }\n\n    const Text1 =\n        [\n            {\n                id: '1',\n                index: '1',\n                coords: [67.737730, 129.245602],\n                title: 'Горы Эвено-быт района',\n                image: Image1,\n                text: 'Суровые горы, для суровых людей',\n            },\n            {\n                id: '2',\n                index: '2',\n                coords: [67.675215, 128.157956],\n                title: 'Сакырыр',\n                image: Image2,\n                text: 'Сакнырыр - посещайсе там и тд',\n            },\n            {\n                id: '3',\n                index: '2',\n                coords: '2',\n                title: 'Оленеводы',\n                image: Image3,\n                text: 'Лагерь оленеводов',\n            },\n            {\n                id: '5',\n                index: '2',\n                coords: '2',\n                title: 'Высокие горы',\n                image: Image5,\n                text: 'Суровые горы, для суровых людей',\n            }\n        ]\n        \n\n        const Text5 =\n        [\n            {\n                id: '1',\n                index: '1',\n                coords: [67.737730, 129.245602],\n                title: 'Путь вдоль горы',\n                image: Image4,\n                text: 'Маршрут до конебазы',\n            },\n            {\n                id: '2',\n                index: '2',\n                coords: [67.675215, 128.157956],\n                title: 'Путь до озера Буора',\n                image: Image6,\n                text: 'Маршрут до села Чинендьэ',\n            },\n        ]\n\n    return (\n        <div>\n            <Box style={{ marginTop: 20, marginLeft: 20 }}>\n                {/* <Typography variant=\"h8\" className={classes.TextStyle}>Фильтры поиска:</Typography> */}\n                <Paper square className={classes.Backround}>\n                    <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        onChange={handleChange}\n                    >\n                        <Tab label=\"Достопримечательности\" />\n                        <Tab label=\"Маршруты\" />\n                    </Tabs>\n                </Paper>\n                {/* <Box>\n                    <Box style={{ marginTop: 20, marginBottom: 10 }}>\n                        <Typography variant=\"h6\" className={classes.TextStyle}>Результат:</Typography>\n                    </Box>\n                </Box> */}\n            </Box>\n\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <div className={classes.container} style={{ overflowY: `${over}`, height: `${height}` }}>\n                    <TabPanel value={value} index={0} dir={theme.direction}>\n                        <Grid\n                            wrap='wrap'\n                            container\n                        >\n                            {Text1.map((item, index) => (\n                                <Grid item key={index} lg={4} sm={4} md={6} xl={4} xs={12} >\n                                    \n                                    <Card2 coords={item.coords} title={item.title} img={item.image} text={item.text} sendCoords={sendCoords} id={item.id} />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </TabPanel>\n                </div>\n                <div className={classes.container} style={{ overflowY: `${over}`, height: `${height}` }}>\n                    <TabPanel value={value} index={1} dir={theme.direction}>\n                        <Grid\n                            wrap='wrap'\n                            container\n                        >\n                            {Text5.map((item, index) => {\n                                console.log(item)\n                                return (\n                                <Grid item key={index} lg={4} sm={4} md={6} xl={4} xs={12} >\n                                    <Card sendRouteCoords={updateCoords} coords={item.coords} sendCoords={sendCoords} title={item.title} img={item.image} text={item.text} id={item.id} />\n                                </Grid>\n                                )\n                            })}\n                        </Grid>\n                    </TabPanel>\n                </div>\n            </SwipeableViews>\n        </div>\n    )\n\n}\n\nexport default RightPanel","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\pages\\HomePage\\component\\BigPicture.js",["146"],"import React from 'react'\nimport { Box, Typography, Grid, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom'\n\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: `url(${\"/Fon.png\"})`,\n        width: '100%',\n        height: 600,\n        color: 'white'\n    },\n    btn: {\n        color: 'black',\n        background: '#00FFC2',\n        borderRadius: 3,\n        border: 0,\n        height: 48,\n        padding: '0 30px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    }\n}));\n\nconst BigPicture = () => {\n    const history = useHistory()\n    const classes = useStyles()\n    return (\n        <Box className={classes.container}>\n            <img src={'/logo1.png'} style={{ width: 300, height: 300, }} />\n            <Grid item style={{ textAlign: 'center' }} lg={4} sm={6} md={4} xl={3} xs={12}>\n                <Typography style={{ fontSize: 16 }} variant=\"h6\">Место сосредочения национального самосозначния, самобытной культуры и гаранта этнического саморазвития...</Typography>\n            </Grid>\n            <Button variant=\"contained\" className={classes.btn} onClick={() => {\n                history.push('/maps')\n            }}>\n                Перейти на карты\n</Button>\n        </Box>\n    )\n}\n\nexport default BigPicture","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\layout\\Layout.js",["147"],"import React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\n\nconst Layout = ({ children }) => {\n    return (\n        <>\n            <Header />\n            {children}\n            {/* <Footer /> */}\n        </>\n    )\n}\n\nexport default Layout","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\styles.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\PageHeader.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\icons.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\Global.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\ScreenWrapper.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\CustomButton.js",["148"],"import * as React from 'react';\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport { mainTheme } from \"../styles\";\nimport { Box } from \"@material-ui/core\";\n\nconst useClasses = makeStyles({\n    button: {\n        display: 'block',\n        backgroundColor: '#00FFC2',\n        fontFamily: mainTheme.fontFamily.Roboto,\n        fontSize: mainTheme.textSizes.small,\n        color: 'black',\n        padding: '13px 15px',\n        margin: '40px auto',\n        border: 0,\n        borderTopLeftRadius: 10,\n        borderBottomRightRadius: 10,\n        transition: 'all 0.3s ease',\n\n        \"&:focus\": {\n            outline: 'none'\n        },\n\n        \"&:hover\": {\n            opacity: 0.8\n        },\n    }\n})\n\nexport const Button = ({ text, onClick }) => {\n    const classes = useClasses()\n    return <button className={classes.button} onClick={onClick}>{text}</button>\n};","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\YellowSeparator.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\Card.js",["149","150"],"import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Context } from '../context/index'\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 290,\n        marginBottom: 20,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 10,\n        borderBottomColor: 'blue',\n        borderBottom: 2,\n        backgroundColor: '#171717',\n    },\n    btn: {\n        background: '#00FFC2',\n        borderRadius: 3,\n        border: 0,\n        marginLeft: 10,\n        marginBottom: 10,\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    }\n});\n\nexport default function ImgMediaCard({ img, text, coords, sendCoords, id, title, sendRouteCoords, isRoute }) {\n    const { leverTrue } = useContext(Context)\n    const classes = useStyles();\n    console.log(img)\n\n    const click = (id) => {\n        leverTrue(id)\n\n        if (coords && coords.length < 3) {\n            sendCoords({\n                coords,\n                id\n            })\n        } else {\n            sendRouteCoords({\n                coords,\n                id,\n            })\n        }\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardMedia\n                component=\"img\"\n                alt=\"Contemplative Reptile\"\n                height=\"160\"\n                image={img}\n                title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', marginTop: '-50px', marginBottom: 10 }}>\n                    {title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ height: 55, textOverflow: 'ellipsis', overflow: 'hidden', color: 'white' }}>\n                    {text}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button variant=\"contained\" className={classes.btn} onClick={() => {\n                    click(id)\n                }}>\n                    Перейти\n                    </Button>\n            </CardActions>\n\n        </Card>\n    );\n}","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\layout\\Header.js",["151","152","153"],"import {\n    AppBar,\n    Toolbar,\n    Typography,\n    makeStyles,\n    Button,\n    IconButton,\n    Drawer,\n    Link,\n    MenuItem,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useHistory } from 'react-router-dom'\n\nconst headersData = [\n    {\n        label: \"Главная\",\n        href: \"/\",\n    },\n    {\n        label: \"Карта\",\n        href: \"/maps\",\n    },\n    {\n        label: \"Вопрос/Ответ\",\n        href: \"/faq\",\n    },\n];\n\nconst useStyles = makeStyles(() => ({\n    header: {\n        backgroundColor: \"#171717\",\n        paddingRight: \"79px\",\n        paddingLeft: \"118px\",\n        \"@media (max-width: 900px)\": {\n            paddingLeft: 0,\n        },\n    },\n    logo: {\n        fontFamily: \"Work Sans, sans-serif\",\n        fontWeight: 600,\n        color: \"#FFFEFE\",\n        textAlign: \"left\",\n    },\n    menuButton: {\n        fontFamily: \"Open Sans, sans-serif\",\n        fontWeight: 700,\n        size: \"18px\",\n        marginLeft: \"38px\",\n    },\n    toolbar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    },\n    drawerContainer: {\n        padding: \"20px 30px\",\n        backgroundColor: '#252525',\n        color: 'white',\n        height: '100%'\n    },\n}));\n\nexport default function Header() {\n    const { header, logo, menuButton, toolbar, drawerContainer } = useStyles();\n    const history = useHistory()\n\n    const [state, setState] = useState({\n        mobileView: false,\n        drawerOpen: false,\n    });\n\n    const { mobileView, drawerOpen } = state;\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 900\n                ? setState((prevState) => ({ ...prevState, mobileView: true }))\n                : setState((prevState) => ({ ...prevState, mobileView: false }));\n        };\n\n        setResponsiveness();\n\n        window.addEventListener(\"resize\", () => setResponsiveness());\n    }, []);\n\n    const displayDesktop = () => {\n        return (\n            <Toolbar className={toolbar}>\n                {femmecubatorLogo}\n                <div>{getMenuButtons()}</div>\n            </Toolbar>\n        );\n    };\n\n    const displayMobile = () => {\n        const handleDrawerOpen = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: true }));\n        const handleDrawerClose = () =>\n            setState((prevState) => ({ ...prevState, drawerOpen: false }));\n\n        return (\n            <Toolbar>\n                <IconButton\n                    {...{\n                        edge: \"start\",\n                        color: \"inherit\",\n                        \"aria-label\": \"menu\",\n                        \"aria-haspopup\": \"true\",\n                        onClick: handleDrawerOpen,\n                    }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Drawer\n                    {...{\n                        anchor: \"left\",\n                        open: drawerOpen,\n                        onClose: handleDrawerClose,\n                    }}\n                >\n                    <div className={drawerContainer}>{getDrawerChoices()}</div>\n                </Drawer>\n\n                <div style={{ marginLeft: '95%' }}>{femmecubatorLogo}</div>\n            </Toolbar>\n        );\n    };\n\n    const getDrawerChoices = () => {\n        return headersData.map(({ label, href }) => {\n            return (\n                <Link\n                    {...{\n                        component: RouterLink,\n                        to: href,\n                        color: \"inherit\",\n                        style: { textDecoration: \"none\" },\n                        key: label,\n                    }}\n                >\n                    <MenuItem>{label}</MenuItem>\n                </Link>\n            );\n        });\n    };\n\n    const femmecubatorLogo = (\n        <img src={'/logo1.png'} style={{ width: 50, height: 50, cursor: 'pointer' }} onClick={() => {\n            history.push('/')\n        }} />\n    );\n\n    const getMenuButtons = () => {\n        return headersData.map(({ label, href }) => {\n            return (\n                <Button\n                    {...{\n                        key: label,\n                        color: \"inherit\",\n                        to: href,\n                        component: RouterLink,\n                        className: menuButton,\n                    }}\n                >\n                    {label}\n                </Button>\n            );\n        });\n    };\n\n    return (\n        <header>\n            <AppBar className={header} position=\"static\">\n                {mobileView ? displayMobile() : displayDesktop()}\n            </AppBar>\n        </header>\n    );\n}","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\layout\\Footer.js",["154","155","156"],"import React, { useState, } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { Container, Grid, Paper } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    cont: {\n        backgroundColor: '#171717',\n        color: \"white\",\n        paddingTop: 25,\n        paddingBottom: 25,\n    },\n    item: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: 'start'\n    },\n    linkItem: {\n        color: 'white'\n    }\n}));\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" style={{ color: 'white' }} align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nexport default function Footer(props) {\n    const classes = useStyles()\n    return (\n        <div className={classes.cont}>\n            <Container >\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                    Footer\n        </Typography>\n                <Typography variant=\"subtitle1\" align=\"center\" style={{ color: 'white' }} component=\"p\">\n                    Something here to give the footer a purpose!\n        </Typography>\n                <Copyright />\n            </Container>\n        </div>\n    );\n}\n\nFooter.propTypes = {\n    sections: PropTypes.array,\n    title: PropTypes.string,\n};","C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\ExtraLargeHeader.js",[],"C:\\Users\\User\\Desktop\\gis_hack-main\\src\\components\\Card2.js",["157","158","159","160","161"],"import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Context } from '../context/index'\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 290,\n        marginBottom: 20,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 10,\n        borderBottomColor: 'blue',\n        borderBottom: 2,\n        backgroundColor: '#171717',\n    },\n    btn: {\n        background: '#00FFC2',\n        borderRadius: 3,\n        border: 0,\n        marginLeft: 10,\n        marginBottom: 10,\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    }\n});\n\nexport default function ImgMediaCard({ img, text, coords, sendCoords, id, title, sendRouteCoords, isRoute }) {\n    const { leverTrue } = useContext(Context)\n    const classes = useStyles();\n    console.log(img)\n\n    const click = (id) => {\n        leverTrue(id)\n\n        if (coords && coords.length < 3) {\n            sendCoords({\n                coords,\n                id\n            })\n        } else {\n            sendRouteCoords({\n                coords,\n                id,\n            })\n        }\n    }\n\n    return (\n        <Card className={classes.root}>\n            <CardMedia\n                component=\"img\"\n                alt=\"Contemplative Reptile\"\n                height=\"160\"\n                image={img}\n                title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n                <Typography variant=\"h6\" color=\"textSecondary\" component=\"p\" style={{ color: 'black', marginTop: '-50px', marginBottom: 10 }}>\n                    {title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ height: 55, textOverflow: 'ellipsis', overflow: 'hidden', color: 'white' }}>\n                    {text}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":1,"column":27,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"170","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":13},{"ruleId":"166","severity":1,"message":"171","line":9,"column":8,"nodeType":"168","messageId":"169","endLine":9,"endColumn":15},{"ruleId":"166","severity":1,"message":"172","line":22,"column":18,"nodeType":"168","messageId":"169","endLine":22,"endColumn":25},{"ruleId":"166","severity":1,"message":"173","line":24,"column":20,"nodeType":"168","messageId":"169","endLine":24,"endColumn":29},{"ruleId":"166","severity":1,"message":"174","line":35,"column":27,"nodeType":"168","messageId":"169","endLine":35,"endColumn":43},{"ruleId":"175","severity":1,"message":"176","line":57,"column":23,"nodeType":"177","messageId":"178","endLine":57,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":59,"column":23,"nodeType":"177","messageId":"178","endLine":59,"endColumn":25},{"ruleId":"166","severity":1,"message":"179","line":1,"column":28,"nodeType":"168","messageId":"169","endLine":1,"endColumn":38},{"ruleId":"166","severity":1,"message":"180","line":38,"column":12,"nodeType":"168","messageId":"169","endLine":38,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":70,"column":28,"nodeType":"177","messageId":"178","endLine":70,"endColumn":30},{"ruleId":"166","severity":1,"message":"181","line":1,"column":8,"nodeType":"168","messageId":"169","endLine":1,"endColumn":13},{"ruleId":"166","severity":1,"message":"182","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"183","line":2,"column":15,"nodeType":"168","messageId":"169","endLine":2,"endColumn":30},{"ruleId":"184","severity":1,"message":"185","line":25,"column":21,"nodeType":"186","endLine":25,"endColumn":64},{"ruleId":"166","severity":1,"message":"167","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"187","line":1,"column":28,"nodeType":"168","messageId":"169","endLine":1,"endColumn":36},{"ruleId":"166","severity":1,"message":"183","line":6,"column":15,"nodeType":"168","messageId":"169","endLine":6,"endColumn":30},{"ruleId":"166","severity":1,"message":"188","line":6,"column":32,"nodeType":"168","messageId":"169","endLine":6,"endColumn":42},{"ruleId":"166","severity":1,"message":"189","line":39,"column":10,"nodeType":"168","messageId":"169","endLine":39,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":34,"column":13,"nodeType":"186","endLine":34,"endColumn":76},{"ruleId":"166","severity":1,"message":"190","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"182","line":5,"column":10,"nodeType":"168","messageId":"169","endLine":5,"endColumn":13},{"ruleId":"166","severity":1,"message":"187","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"191","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":22},{"ruleId":"166","severity":1,"message":"192","line":4,"column":5,"nodeType":"168","messageId":"169","endLine":4,"endColumn":15},{"ruleId":"166","severity":1,"message":"193","line":66,"column":21,"nodeType":"168","messageId":"169","endLine":66,"endColumn":25},{"ruleId":"184","severity":1,"message":"185","line":151,"column":9,"nodeType":"186","endLine":153,"endColumn":14},{"ruleId":"166","severity":1,"message":"187","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"194","line":7,"column":21,"nodeType":"168","messageId":"169","endLine":7,"endColumn":25},{"ruleId":"166","severity":1,"message":"195","line":7,"column":27,"nodeType":"168","messageId":"169","endLine":7,"endColumn":32},{"ruleId":"166","severity":1,"message":"187","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"191","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":22},{"ruleId":"166","severity":1,"message":"196","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":19},{"ruleId":"166","severity":1,"message":"197","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":14},{"ruleId":"166","severity":1,"message":"198","line":38,"column":11,"nodeType":"168","messageId":"169","endLine":38,"endColumn":16},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'SideBar' is defined but never used.","'setData' is assigned a value but never used.","'setRoutes' is assigned a value but never used.","'setSelectedRoute' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'indexArray' is assigned a value but never used.","'React' is defined but never used.","'Box' is defined but never used.","'TabScrollButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'IconButton' is defined but never used.","'a11yProps' is defined but never used.","'Footer' is defined but never used.","'CardActionArea' is defined but never used.","'Typography' is defined but never used.","'logo' is assigned a value but never used.","'Grid' is defined but never used.","'Paper' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'click' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]